# Generated by Django 5.2 on 2025-09-17 05:07

import ckeditor_uploader.fields
import datetime
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('pbn', '0032_domains_region_domains_street_alter_article_created'),
    ]

    operations = [
        migrations.AddField(
            model_name='domains',
            name='extra_picture',
            field=models.ImageField(help_text='Используется для шаблонов: услуги-1 (пропорпции 3x2)', null=True, upload_to='static/pbn/img', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=('png', 'jpg', 'jpeg'))], verbose_name='Дополнительное изображение на главной'),
        ),
        migrations.AddField(
            model_name='domains',
            name='extra_subtitle',
            field=models.CharField(blank=True, default='', help_text='Используется для шаблонов: услуги-1', max_length=100, verbose_name='Подзаголовок 2-ого текста главной'),
        ),
        migrations.AddField(
            model_name='domains',
            name='extra_text',
            field=ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', help_text='Используется для шаблонов: услуги-1', verbose_name='Дополнительный текст на главной'),
        ),
        migrations.AddField(
            model_name='domains',
            name='telegtam',
            field=models.CharField(blank=True, default='', help_text='Для всех коммерческих шаблонов. Формат: my_name', max_length=100, verbose_name='Телеграм'),
        ),
        migrations.AddField(
            model_name='domains',
            name='text_policy',
            field=ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', help_text='Используется для всех коммерческих шаблонов', verbose_name='Текст страницы - Политика конфиденциальности'),
        ),
        migrations.AddField(
            model_name='domains',
            name='work_time',
            field=models.CharField(blank=True, default='', help_text='Используется для всех коммерческих шаблонов', max_length=50, verbose_name='График работы'),
        ),
        migrations.AlterField(
            model_name='article',
            name='created',
            field=models.DateField(default=datetime.datetime(2025, 9, 17, 8, 7, 21, 541887), verbose_name='Дата создания'),
        ),
        migrations.AlterField(
            model_name='domains',
            name='name_site',
            field=models.CharField(blank=True, default='', help_text='Для всех шаблонов', max_length=100, verbose_name='Название сайта в шапке'),
        ),
        migrations.AlterField(
            model_name='domains',
            name='street',
            field=models.CharField(blank=True, default='', help_text='Используется для микроразметки. Например: Полежаевская дом 1', max_length=50, verbose_name='Адрес (без города)'),
        ),
        migrations.AlterField(
            model_name='domains',
            name='template',
            field=models.CharField(choices=[('first', 'Блог-1'), ('second', 'Блог-2'), ('blog_third', 'Блог-3'), ('blog_fourth', 'Блог-4'), ('service_1', 'Услуги-1')], default='first', max_length=150, verbose_name='Выбор шаблона'),
        ),
        migrations.CreateModel(
            name='MainSlider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort', models.IntegerField(default=100, help_text='Чем ближе к нулю,тем выше', verbose_name='Сортировка')),
                ('name', models.CharField(default='', help_text='Например: Супер-технология по фильтрации воды', max_length=100, verbose_name='Название слайда')),
                ('text', models.CharField(default='', help_text='Например: Дарим 30% скидку до конца месяца на фильтры для воды', max_length=300, verbose_name='Текстовый анонс')),
                ('preview_picture', models.ImageField(help_text='размер 13500x900', null=True, upload_to='static/pbn/img', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=('png', 'jpg', 'jpeg'))], verbose_name='Картинка-слайда')),
                ('link', models.CharField(default='', help_text='Например: /service/name1', max_length=100, verbose_name='Прозвольная ссылка')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pbn.domains', verbose_name='Домен')),
            ],
            options={
                'verbose_name': 'Слайдеры',
                'verbose_name_plural': 'Слайдер',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Он же пойдет в H1 и в ссылку в меню', max_length=250, verbose_name='Название услуги')),
                ('sort', models.IntegerField(default=100, help_text='Чем ближе к нулю,тем выше', verbose_name='Сортировка')),
                ('slug', models.SlugField(help_text='При создании поставьте любой символ. Поле заполнится автоматически.', max_length=100, verbose_name='URL')),
                ('title', models.CharField(default='', max_length=250, verbose_name='Title')),
                ('description', models.CharField(default='', max_length=500, verbose_name='Meta-description')),
                ('keywords', models.CharField(default='', max_length=250, verbose_name='Meta-keywords')),
                ('preview_picture', models.ImageField(help_text='размер 600x300', null=True, upload_to='static/pbn/img', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=('png', 'jpg', 'jpeg'))], verbose_name='Картинка-превью')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pbn.domains', verbose_name='Домен')),
            ],
            options={
                'verbose_name': 'Услугу',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='Например: резка стали', max_length=100, verbose_name='Название позиции')),
                ('price_name', models.IntegerField(default='', help_text='200', verbose_name='Цена')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pbn.service', verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Набор цен',
                'verbose_name_plural': 'Позиция - цена',
            },
        ),
        migrations.CreateModel(
            name='ConstructorTextService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_block', models.CharField(choices=[('text', 'Текст'), ('picture_right', 'Текст + картинка справа'), ('picture_left', 'Текст + картинка слева')], default='text', max_length=100, verbose_name='Тип блока')),
                ('sort', models.IntegerField(default=10, help_text='Чем ближе к нулю,тем выше', verbose_name='Сортировка')),
                ('subtitle', models.CharField(blank=True, default='', max_length=300, verbose_name='Подзаголовок H2-блока')),
                ('text', ckeditor_uploader.fields.RichTextUploadingField(default='', verbose_name='Текст')),
                ('picture', models.ImageField(null=True, upload_to='static/pbn/img', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=('png', 'jpg', 'jpeg'))], verbose_name='Картинка-блока')),
                ('place_price', models.BooleanField(default=True, verbose_name='Расположить до блока цен')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pbn.service', verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Текстовые блоки',
                'verbose_name_plural': 'Текстовый блок',
            },
        ),
    ]
